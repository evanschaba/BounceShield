name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags (e.g., v1.0.0)

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: nightly

    - name: Cache Rust dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Add Targets
      run: |
        rustup target add x86_64-apple-darwin x86_64-unknown-linux-gnu

    - name: Build for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        cargo build --release --target x86_64-unknown-linux-gnu

    - name: Build for macOS
      if: matrix.os == 'macos-latest'
      run: |
        cargo build --release --target x86_64-apple-darwin

    - name: Package Linux Binary
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p release/linux
        cp target/x86_64-unknown-linux-gnu/release/bounceshield release/linux/BounceShield
        tar -czf release/linux/BounceShield.tar.gz -C release/linux BounceShield

    - name: Package macOS Binary
      if: matrix.os == 'macos-latest'
      run: |
        mkdir -p release/macos
        cp target/x86_64-apple-darwin/release/bounceshield release/macos/BounceShield
        tar -czf release/macos/BounceShield.tar.gz -C release/macos BounceShield

    - name: Upload Linux Binary
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: BounceShield-linux
        path: release/linux/BounceShield.tar.gz

    - name: Upload macOS Binary
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: BounceShield-macos
        path: release/macos/BounceShield.tar.gz